version: "3"

services:
  rabbitMQ:
    image: rabbitmq:3-management
    restart: on-failure
    networks:
      - accountable-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:15672"]
      interval: 30s
      timeout: 30s
      retries: 3
    ports:
      - "5672:5672"
      - "15672:15672"

  database:
    image: "mongo:5"
    restart: on-failure
    networks:
      - accountable-network
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 20s
    ports:
      - "27017:27017"
    volumes:
      - "mongo-data:/data/db"
    environment:
      - MONGODB_USERNAME=admin
      - MONGODB_PASSWORD=P@ssw0rd
      - MONGODB_DATABASE=accountable

  bank-api-mock:
    build:
      context: ./BankApiMock
    restart: on-failure
    ports:
      - "4000:4000"
    networks:
      - accountable-network
    healthcheck:
      test: ["CMD", "wget", "-O", "/dev/null", "-q", "localhost:3000"]
      interval: 10s
      timeout: 6s
      retries: 5
      start_period: 20s
    environment:
      NODE_ENV: docker
      PORT: 4000
      SECRET_KEY: "SECRET_KEY"
      MAX_TRANSACTIONS_NUMBER: 10

  worker:
    build:
      context: ./Worker
    restart: always
    networks:
      - accountable-network
    depends_on:
      - rabbitMQ
      - database
      - bank-api-mock
    environment:
      NODE_ENV: docker
      MONGO_URL: "mongodb://database:27017/accountable"
      AMQP_CONNECTION_URL: "amqp://rabbitMQ:5672"
      BASE_API_URL: "http://server:3000"
      BANK_API_URL: "http://bank-api-mock:4000"
    command: sh -c "sleep 10 && npm start"

  server:
    build:
      context: ./Server
    restart: always
    networks:
      - accountable-network
    depends_on:
      - rabbitMQ
    ports:
      - "3000:3000"
    volumes:
      - "./logs/:/app/logs/"
    environment:
      NODE_ENV: docker
      PORT: 3000
      MONGO_URL: "mongodb://database:27017/accountable"
      AMQP_CONNECTION_URL: "amqp://rabbitMQ:5672"
      JWT_SECRET: JWT_SECRET
    command: sh -c "sleep 10 && npm start"

volumes:
  mongo-data:
    driver: local

networks:
  accountable-network:
